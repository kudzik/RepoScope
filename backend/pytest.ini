[tool:pytest]
# Pytest configuration for RepoScope backend

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    cache: marks tests related to cache functionality
    ai: marks tests related to AI functionality
    api: marks tests related to API endpoints
    diagnostic: marks tests as diagnostic tests

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = .
omit = 
    tests/*
    venv/*
    .venv/*
    */migrations/*
    */venv/*
    */__pycache__/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test environment variables
env = 
    TEST_MODE = true
    AI_CACHE_FILE = test_ai_responses_cache.json
    COLLECT_REAL_RESPONSES = false
